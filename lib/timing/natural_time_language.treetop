module Timing
  grammar NaturalTimeLanguage

    rule expression
      space* moment:moment space* zone_offset:zone_offset? space* <Expression>
    end

    rule moment
      timestamp / moment_at_time / date_moment
    end

    rule date_moment
      named_moment / 
      last_next_day_name / 
      day_month_name_year / 
      year_month_day /
      beginning_end_interval /
      time_ago
    end

    rule named_moment
      now / today / tomorrow / yesterday
    end

    rule last_next_day_name
      direction:last_next space* day_name:day_name <LastNextDayName>
    end

    rule day_month_name_year
      day:integer space* month:month_name space* year:integer? space* <DayMonthNameYear>
    end

    rule year_month_day
      year:integer '-' month:integer '-' day:integer <YearMonthDay>
    end

    rule beginning_end_interval
      direction:beginning_end space* interval_type:interval <BeginningEndInterval>
    end

    rule time_ago
      number:integer space* interval_type:interval space* 'ago'i <TimeAgo>
    end

    rule moment_at_time
      moment:date_moment space* 'at'i space* time:hour_minute_second <MomentAtTime>
    end

    rule timestamp
      [\d]4..4 '-' [\d]2..2 '-' [\d]2..2 space* 'T'? space* [\d]2..2 ':' [\d]2..2 ':' [\d]2..2 <Timestamp>
    end

    rule now
      'now'i <Now>
    end

    rule today
      'today'i <Today>
    end

    rule tomorrow
      'tomorrow'i <Tomorrow>
    end

    rule yesterday
      'yesterday'i <Yesterday>
    end

    rule last_next
      last / next
    end

    rule last
      'last'i <LastNext>
    end

    rule next
      'next'i <LastNext>
    end

    rule beginning_end
      beginning_of / end_of
    end

    rule beginning_of
      direction:'beginning'i space* 'of'i <BeginningEnd>
    end

    rule end_of
      direction:'end'i space* 'of'i <BeginningEnd>
    end

    rule day_name
      long_day_name / short_day_name
    end

    rule interval
      second_interval / 
      minute_interval / 
      hour_interval / 
      day_interval / 
      week_interval / 
      month_interval / 
      year_interval
    end

    rule second_interval
      'second'i 's'i? <SecondInterval>
    end

    rule minute_interval
      'minute'i 's'i? <MinuteInterval>
    end

    rule hour_interval
      'hour'i 's'i? <HourInterval>
    end

    rule day_interval
      'day'i 's'i? <DayInterval>
    end

    rule week_interval
      'week'i 's'i?  <WeekInterval>
    end

    rule month_interval
      'month'i 's'i?  <MonthInterval>
    end

    rule year_interval
      'year'i 's'i?  <YearInterval>
    end

    rule long_day_name
      'sunday'i    <DayName> /
      'monday'i    <DayName> /
      'tuesday'i   <DayName> /
      'wednesday'i <DayName> /
      'thursday'i  <DayName> /
      'friday'i    <DayName> /
      'saturday'i  <DayName>
    end

    rule short_day_name
      'sun'i <DayName> /
      'mon'i <DayName> /
      'tue'i <DayName> /
      'wed'i <DayName> /
      'thu'i <DayName> /
      'fri'i <DayName> /
      'sat'i <DayName>
    end

    rule month_name
      long_month_name / short_month_name
    end

    rule long_month_name
      'january'i   <MonthName> /
      'february'i  <MonthName> /
      'march'i     <MonthName> /
      'april'i     <MonthName> /
      'may'i       <MonthName> /
      'june'i      <MonthName> /
      'july'i      <MonthName> /
      'august'i    <MonthName> /
      'september'i <MonthName> /
      'october'i   <MonthName> /
      'november'i  <MonthName> /
      'december'i  <MonthName>
    end

    rule short_month_name
      'jan'i <MonthName> /
      'feb'i <MonthName> /
      'mar'i <MonthName> /
      'apr'i <MonthName> /
      'may'i <MonthName> /
      'jun'i <MonthName> /
      'jul'i <MonthName> /
      'aug'i <MonthName> /
      'sep'i <MonthName> /
      'oct'i <MonthName> /
      'nov'i <MonthName> /
      'dec'i <MonthName>
    end

    rule zone_offset
      [+-] [\d]2..2 ':'? [\d]2..2 <ZoneOffset>
    end

    rule hour_minute_second
      [\d]2..2 ':' [\d]2..2 (':' [\d]2..2)? <HourMinuteSecond> /
      'beginning' <HourMinuteSecond> /
      'end' <HourMinuteSecond>
    end

    rule integer
      [\d]+ <Int>
    end

    rule space
      [\s\t\n]
    end

  end
end